plugins {
    id 'java'
#if($context.hasLanguage("kotlin"))
    id 'org.jetbrains.kotlin.jvm' version '${context.getVersion("org.jetbrains.kotlin", "kotlin-bom")}'
#end
}

repositories {
    mavenCentral()
}

dependencies {
#if ($context.hasLanguage("kotlin"))
    implementation platform(libs.kotlin.bom)
    implementation libs.kotlin.stdlib.jdk8

#end
    implementation platform(libs.armeria.bom)
    implementation libs.armeria
#if ($context.hasLibrary("armeria-brave"))
    implementation libs.armeria.brave
#end
#if ($context.hasLibrary("armeria-dropwizard2"))
    implementation libs.armeria.dropwizard2
#end
#if ($context.hasLibrary("armeria-eureka"))
    implementation libs.armeria.eureka
#end
#if ($context.hasLibrary("armeria-grpc"))
    implementation libs.armeria.grpc
#end
#if ($context.hasLibrary("armeria-jetty9"))
    implementation libs.armeria.jetty9
#end
#if ($context.hasLibrary("armeria-kafka"))
    implementation libs.armeria.kafka
#end
#if ($context.hasLibrary("armeria-kotlin"))
    implementation libs.armeria.kotlin
#end
#if ($context.hasLibrary("armeria-logback"))
    implementation libs.armeria.logback
#end
#if ($context.hasLibrary("armeria-protobuf"))
    implementation libs.armeria.protobuf
#end
#if ($context.hasLibrary("armeria-retrofit2"))
    implementation libs.armeria.retrofit2
#end
#if ($context.hasLibrary("armeria-rxjava3"))
    implementation libs.armeria.rxjava3
#end
#if ($context.hasLibrary("armeria-saml"))
    implementation libs.armeria.saml
#end
#if ($context.hasLibrary("armeria-scala_2.12"))
#if ($context.hasLanguage("scala"))
    implementation libs.scala.library.'2.12'
#end
    implementation libs.armeria.scala_2.12
#end
#if ($context.hasLibrary("armeria-scala_2.13"))
#if ($context.hasLanguage("scala"))
    implementation libs.scala.library.'2.13'
#end
    implementation libs.armeria.scala_2.13
#end
#if ($context.hasLibrary("armeria-scala_3"))
#if ($context.hasLanguage("scala"))
    implementation libs.scala3.library
#end
    implementation libs.armeria.scala_3
#end
#if ($context.hasLibrary("armeria-scalapb_2.12"))
    implementation libs.armeria.scalapb_2.12
#end
#if ($context.hasLibrary("armeria-scalapb_2.13"))
    implementation libs.armeria.scalapb_2.13
#end
#if ($context.hasLibrary("armeria-spring-boot2-autoconfigure"))
    implementation libs.armeria.spring.boot2.autoconfigure
#end
#if ($context.hasLibrary("armeria-spring-boot2-webflux-autoconfigure"))
    implementation libs.armeria.spring.boot2.webflux.autoconfigure
#end
#if ($context.hasLibrary("armeria-spring-boot3-autoconfigure"))
    implementation libs.armeria.spring.boot3.autoconfigure
#end
#if ($context.hasLibrary("armeria-spring-boot3-webflux-autoconfigure"))
    implementation libs.armeria.spring.boot3.webflux.autoconfigure
#end
#if ($context.hasLibrary("armeria-thrift0.13"))
    implementation libs.armeria.thrift0.13
#end
#if ($context.hasLibrary("armeria-tomcat9"))
    implementation libs.armeria.tomcat9
#end
#if ($context.hasLibrary("armeria-zookeeper3"))
    implementation libs.armeria.zookeeper3
#end

    // Logging
    runtimeOnly libs.logback.classic
    runtimeOnly libs.log4j.over.slf4j

#if ($context.testRunnerId == "junit4")
    testImplementation libs.junit
#end
#if ($context.testRunnerId == "junit5")
    testRuntimeOnly platform(libs.junit.bom)
    testRuntimeOnly libs.junit.jupiter
#end
#if ($context.hasLanguage("kotlin"))
#if ($context.testRunnerId == "junit4")
    testImplementation libs.kotlin.test.junit
#end
#if ($context.testRunnerId == "junit5")
    testImplementation libs.kotlin.test.junit5
#end
#end
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += '-parameters'
}
#if ($context.testRunnerId == "junit5")

test {
    useJUnitPlatform()
}
#end

#if ($context.hasLanguage("kotlin"))

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        javaParameters = true
    }
}
#end
