plugins {
    id 'java'
#if($context.hasLanguage("kotlin"))
    id 'org.jetbrains.kotlin.jvm' version '${context.getVersion("org.jetbrains.kotlin", "kotlin-bom")}'
#end
}

repositories {
    mavenCentral()
}

dependencies {
#if ($context.hasLanguage("kotlin"))
    implementation platform('org.jetbrains.kotlin:kotlin-bom:${context.getVersion("org.jetbrains.kotlin", "kotlin-bom")}')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

#end
    implementation platform('com.linecorp.armeria:armeria-bom:${context.getVersion("com.linecorp.armeria", "armeria-bom")}')
    implementation 'com.linecorp.armeria:armeria'
#if ($context.hasLibrary("armeria-brave"))
    implementation 'com.linecorp.armeria:armeria-brave'
#end
#if ($context.hasLibrary("armeria-dropwizard2"))
    implementation 'com.linecorp.armeria:armeria-dropwizard2'
#end
#if ($context.hasLibrary("armeria-eureka"))
    implementation 'com.linecorp.armeria:armeria-eureka'
#end
#if ($context.hasLibrary("armeria-grpc"))
    implementation 'com.linecorp.armeria:armeria-grpc'
#end
#if ($context.hasLibrary("armeria-jetty9"))
    implementation 'com.linecorp.armeria:armeria-jetty9'
#end
#if ($context.hasLibrary("armeria-kafka"))
    implementation 'com.linecorp.armeria:armeria-kafka'
#end
#if ($context.hasLibrary("armeria-kotlin"))
    implementation 'com.linecorp.armeria:armeria-kotlin'
#end
#if ($context.hasLibrary("armeria-logback"))
    implementation 'com.linecorp.armeria:armeria-logback'
#end
#if ($context.hasLibrary("armeria-protobuf"))
    implementation 'com.linecorp.armeria:armeria-protobuf'
#end
#if ($context.hasLibrary("armeria-retrofit2"))
    implementation 'com.linecorp.armeria:armeria-retrofit2'
#end
#if ($context.hasLibrary("armeria-rxjava3"))
    implementation 'com.linecorp.armeria:armeria-rxjava3'
#end
#if ($context.hasLibrary("armeria-saml"))
    implementation 'com.linecorp.armeria:armeria-saml'
#end
#if ($context.hasLibrary("armeria-scalapb_2.12"))
    implementation 'com.linecorp.armeria:armeria-scalapb_2.12'
#end
#if ($context.hasLibrary("armeria-scalapb_2.13"))
    implementation 'com.linecorp.armeria:armeria-scalapb_2.13'
#end
#if ($context.hasLibrary("armeria-spring-boot2-autoconfigure"))
    implementation 'com.linecorp.armeria:armeria-spring-boot2-autoconfigure'
#end
#if ($context.hasLibrary("armeria-spring-boot2-webflux-autoconfigure"))
    implementation 'com.linecorp.armeria:armeria-spring-boot2-webflux-autoconfigure'
#end
#if ($context.hasLibrary("armeria-thrift0.13"))
    implementation 'com.linecorp.armeria:armeria-thrift0.13'
#end
#if ($context.hasLibrary("armeria-tomcat9"))
    implementation 'com.linecorp.armeria:armeria-tomcat9'
#end
#if ($context.hasLibrary("armeria-zookeeper3"))
    implementation 'com.linecorp.armeria:armeria-zookeeper3'
#end

    // Logging
    runtimeOnly 'ch.qos.logback:logback-classic:${context.getVersion("ch.qos.logback", "logback-classic")}'
    runtimeOnly 'org.slf4j:log4j-over-slf4j:${context.getVersion("org.slf4j", "log4j-over-slf4j")}'

#if ($context.testRunnerId == "junit4")
    testImplementation 'junit:junit:${context.getVersion("junit", "junit")}'
#end
#if ($context.testRunnerId == "junit5")
    testRuntimeOnly platform('org.junit:junit-bom:${context.getVersion("org.junit", "junit-bom")}')
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter'
#end
#if ($context.hasLanguage("kotlin"))
#if ($context.testRunnerId == "junit4")
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
#end
#if ($context.testRunnerId == "junit5")
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
#end
#end
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += '-parameters'
}
#if ($context.testRunnerId == "junit5")

test {
    useJUnitPlatform()
}
#end

#if ($context.hasLanguage("kotlin"))

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        javaParameters = true
    }
}
#end
